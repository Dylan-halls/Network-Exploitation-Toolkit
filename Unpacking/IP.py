from scapy.all import *
from termcolor import colored

def pkthandler(pkt):
   if pkt.haslayer(IP):
      ip = pkt[IP]
      
      print("--------------------------------------------------------\n\n")
      print("                     .:{}:.                            ".format(colored('IP','red')))
      print("                                                          ")
      print("  \033[1;36mSource IP:\033[00m {} \033[1;36mDestination IP:\033[00m {}".format(ip.src, ip.dst))      
      print("  \033[1;36mVersion:\033[00m {}".format(ip.version))
      print("  \033[1;36mIHL:\033[00m {}".format(ip.ihl))
      print("  \033[1;36mTOS:\033[00m {}".format(ip.tos))
      print("  \033[1;36mTotal Length:\033[00m {}".format(ip.len))
      print("  \033[1;36mIdentification:\033[00m {}".format(ip.id))
      print("  \033[1;36mFlags:\033[00m {}".format(ip.flags))
      print("  \033[1;36mFragment Offset:\033[00m {}".format(ip.frag))
      print("  \033[1;36mTime To Live:\033[00m {}".format(ip.ttl))
      if ip.proto == 6:
         print("  \033[1;36mProtocol:\033[00m {}".format('TCP'))
      elif ip.proto == 1:
         print("  \033[1;36mProtocol:\033[00m {}".format('ICMP'))
      elif ip.proto == 17:
         print("  \033[1;36mProtocol:\033[00m {}".format('UDP'))
      else:
      	 print("  \033[1;36mProtocol:\033[00m {}".format(ip.proto))
      print("  \033[1;36mHeader Checksum:\033[00m {}".format(ip.chksum))




pkt = sniff(iface='wlan0' ,prn=pkthandler)