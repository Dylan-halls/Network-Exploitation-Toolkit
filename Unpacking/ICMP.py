from scapy.all import *
from termcolor import colored

def pkthandler(pkt):
      try:
         ip = pkt[IP]
      except IndexError:
         pass

      try:
         src = ip.src
         dst = ip.dst
      except UnboundLocalError:
         pass

      if pkt.haslayer(ICMP):
         icmp = pkt[ICMP]

         print("--------------------------------------------------------\n\n")
         print("                     .:{}:.                            ".format(colored('ICMP','red')))
         print("                                                          ")
         print("  \033[1;36mSource IP:\033[00m {} \033[1;36mDestination IP:\033[00m {}".format(src, dst))
         print("  \033[1;36mType Of Message:\033[00m {}".format(ip.type))
         print("  \033[1;36mCode:\033[00m {}".format(ip.code))
         print("  \033[1;36mChecksum:\033[00m {}".format(ip.chksum))
         print("  \033[1;36mIdentifier:\033[00m {}".format(ip.id))
         print("  \033[1;36mSequence Number:\033[00m {}".format(ip.seq))
         print("  \033[1;36mTs Origin:\033[00m {}".format(ip.ts_ori))
         print("  \033[1;36mTs Rx:\033[00m {}".format(ip.ts_rx))
         print("  \033[1;36mTs Tx:\033[00m {}".format(ip.ts_tx))
         print("  \033[1;36mGateway:\033[00m {}".format(ip.gw))
         print("  \033[1;36mPtr:\033[00m {}".format(ip.ptr))
         print("  \033[1;36mReserved:\033[00m {}".format(ip.reserved))
         print("  \033[1;36mReserved:\033[00m {}".format(ip.reserved))
         print("  \033[1;36mAddress Mask:\033[00m {}".format(ip.addr_mask))
         print("  \033[1;36mUnused:\033[00m {}".format(ip.unused))
         

         print(" ")
         print(" ")
         hexdump(pkt)
         



pkt = sniff(iface='wlan0' ,prn=pkthandler)